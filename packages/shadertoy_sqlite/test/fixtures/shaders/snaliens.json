{
    "ver": "0.1",
    "info": {
        "id": "tlV3zy",
        "date": "1579279173",
        "viewed": 1881,
        "name": "Snaliens",
        "username": "noobcsf",
        "description": "Shader inspired in the artwork of Snaliens.",
        "likes": 35,
        "published": 1,
        "flags": 0,
        "usePreview": 0,
        "tags": [
            "cute",
            "cartoon"
        ],
        "hasliked": 0
    },
    "renderpass": [
        {
            "inputs": [],
            "outputs": [
                {
                    "id": "4dfGRr",
                    "channel": 0
                }
            ],
            "code": "\nfloat saturate(float value)\n{\n\treturn max(0., min(value, 1.));   \n}\n\nvec4 eye_shape(vec2 uv, float blur, float id)\n{\n  uv.y -=0.05;\n\n  float blink = min((cos(iTime * 3. + id*37.) * 0.5 + 0.5)*20., 1.);\n  \/\/uv.y \/= blink;\n  \/\/uv.x \/= min(blink + 0.5, 1.);\n  float eye = length(uv) - .1;\n  float ring = length(uv) - .07;\n  float inner = length(uv) - .04;\n  vec2 uv2 = uv;\n  uv2.x *= 0.5;\n  uv2.y = -abs(uv2.y);\n  float eye2 = length(uv2-vec2(0., -0.2*blink)) - .1;\n  \n  uv2 = uv;\n  uv2.x = abs(uv2.x);\n  uv2.x *= 0.4;\n  uv2.y *= 1.5;\n  uv2.y += uv2.x*uv2.x*100.;\n  uv2.x -= (uv2.x*uv2.x)*0.01;\n  uv2.y -= 0.035;\n  float eye_white = length(uv2) - .01;\n\n  float eyeMask = smoothstep(blur, -blur, eye);\n  float eyeMask2 = smoothstep(blur, -blur, eye2);\n  float ringMask = smoothstep(blur, -blur, ring);\n  float innerMask = smoothstep(blur, -blur, inner);\n  float eye_whiteMask = smoothstep(blur, -blur, eye_white);\n  vec3 iris = vec3(221.\/255.,133.\/255.,37.\/255.);\n  iris += iris*0.15;\n  iris += (uv.y)\/0.7*2.;\n  \n  eyeMask *= 1.-eyeMask2;\n  \n  vec3 color = vec3(1.);\n  color = mix(color, iris, ringMask);\n \n    \n  color -= mix(color, vec3(0.), 1.-innerMask);\n  color = mix(color, vec3(1.), eye_whiteMask);\n  \n  float shade = min(1. , (-eye\/0.12\/0.2)*0.5 + 0.6); \n  shade *= (uv.y)\/0.25+ 0.9;\n  color *=vec3(1) * shade;\n  \n    return vec4(color, eyeMask);\n}\n\nvec4 body(vec2 uv, vec3 color,  float radius, float blur, float id)\n{\n\n  uv *= 1.0+(cos(iTime*4. + id)*0.5+0.5)*0.02;\n  \n  vec2 uvEye = uv - vec2(0., 0.24);\n  vec4 eye_color = eye_shape(uvEye, blur, id);\n\n  uv.x = abs(uv.x) * (1. + smoothstep(0.5, 0.0, uv.y)*0.2);\n\n  uv.x *= uv.x*2.0;\n  uv.x += 0.1;\n  uv.y -= 0.2;\n  uv.y *= 0.7;\n\n  float gradient_y = uv.y;\n\n  float body = length(uv) - radius;\n  \n\n  float bodyMask = smoothstep(blur, -blur, body);\n\n  float bodyShape = smoothstep(-.0 , 0.4, -body\/ radius);\n\n  \/\/color *= 0.5*bodyShape;\n  vec3 finalColor = color;\n  float gradient = min(1.,(0.5 + smoothstep(-0.1, 0.2, gradient_y)));\n  finalColor = color* bodyMask;\n  finalColor *= gradient;\n  finalColor += 0.3*(1.-bodyShape)*bodyMask;\n  \/\/color *= smoothstep(0., 0.5, 1.0 - circle); \n\n  finalColor = mix(finalColor, eye_color.rgb, eye_color.w);\n\n  return vec4(finalColor, bodyMask);\n\n}\n\nvec4 starLayer2(vec2 uv)\n{\n  uv *= 10.;\n  uv *= 0.5;\n\n  vec2 lv = (fract(uv)-0.5);\n  vec2 id = ceil(uv);\n\n  float randomValue = (cos(id.y*733.23)*cos(id.x*52629.72))*0.5 + 0.5;\n\n  vec2 random = (sin(id.yx*23.89)*cos(id*3455.7))*0.5 + 0.5;\n\n  float sz = mix(2., 8., randomValue);\n  vec2 mv = vec2(\n    mix(-sz,sz, random.x)\/4.,\n    mix(-sz,sz, random.y)\/4.\n  );\n  lv *= sz;\n  lv += mv;\n\n\n  float time = cos(iTime*2.+ randomValue*2357.)*1.;\n\n  float len = abs(lv.x) * abs(lv.y);\n  float len2 = length(lv.xy);\n  vec3 col = vec3(1.);\n  len *= 40.0;\n  len = 1.-len;\n  len2 = 1.-len2;\n  col += smoothstep(0.5, 1.0, len2)*(1.-abs(cos(time*0.5)*0.5));\n  len2 = saturate(len2);\n  len*=len2;\n  \n  len -= (1. - abs(cos(time)*0.3));\n  len = smoothstep(-0.1, 0.1, len);\n  len = saturate(len);\n\n  vec3 star1 = vec3(1., 0.5, 0.5);\n  vec3 star2 = vec3(0.5, 0.5, 1.);\n  vec3 star = mix(star1, star2, randomValue);\n\n  col = star*len;\n  col += smoothstep(0.7, 1.0, len2)*1.;\n  return vec4(col, len);\n}\nvec4 stars(vec2 uv, float uvY)\n{\n  float y = uv.y;\n  vec4 s = vec4(0.);\n  uv*= 1.5;\n  vec4 sl = starLayer2(uv);\n  s = mix(s, sl, sl.w);\n\n  uv*= 1.5;\n  uv+=vec2(12.2);\n  sl = starLayer2(uv);\n  s = mix(sl, s, s.w);\n\n  \/\/s = 1.\/s*0.0091;\n\n  vec3 color = vec3(0);\n  vec3 sky1 = vec3(7.\/255., 19.\/255., 44.\/255.);\n  vec3 sky2 = vec3(115.\/255., 172.\/255., 199.\/255.);\n\n  vec3 sky = mix(sky2, sky1, uvY);\n\n  \/\/color.rg = lv;\n  color = s.rgb;\n  color = mix(sky*1.5, color, uvY - 0.3);\n\n  \/\/color = vec3(1.) * s ;\n\n  return vec4(color, 1.);\n}\n\nfloat square(vec2 uv, float sY, float eY, float top, float bottom)\n{\n  uv.x = abs(uv.x);\n\n\n  float m = 0.001;\n  float h = mix(bottom, top, (uv.y-sY)\/(eY-sY));\n\n\n  float k = smoothstep(-m, m, uv.y - sY);\n  k *= smoothstep(m, -m, uv.y - eY);\n  k *= smoothstep(m, -m, uv.x - h);\n\n  return k;\n\n}\nmat2 rot(float a)\n{\n  return mat2(cos(a), - sin(a), sin(a), cos(a));\n}\n\nfloat tree(vec2 uv)\n{\n  float f = square(uv, -0.1, 0.15, 0.10, 0.10);\n  \/\/uv = rot(0.01+ cos(iGlobalTime)*0.1) * uv;\n  uv.y-= 0.16;\n  f += square(uv, -0.1, 0.35, 0.18, 0.35);\n  uv.y-= 0.35;\n  uv = rot(0.01 + cos(iTime)*0.1) * uv;\n  f += square(uv, -0.05, 0.25, 0.15, 0.3);\n  uv.y-= 0.25;\n  uv = rot(0.01 + cos(iTime)*0.1) * uv;\n  f += square(uv, -0.05, 0.45, 0.0, 0.25);\n\n  return f;\n}\n\nvec4 flr(vec2 uv)\n{\n  uv.y -=0.15;\n  vec3 color;\n  vec3 fg_color = vec3(32.\/255., 56.\/255., 103.\/255.);\n\n  float l = 1.;\n\n  uv.y += uv.x*uv.x*0.1;\n\n  l = smoothstep(0.0, 0.001, -uv.y);\n\n  color.rg = uv;\n  color = fg_color;\n\n  vec2 lv = rot(-0.12 + cos(iTime*2.)*0.01 ) * (uv + vec2(-0.55, 0.));\n  lv.y +=0.2;\n  lv*=1.7;\n  l += tree(lv);\n\n  lv = rot(0.12 + cos(iTime*2. + 23.)*0.1 ) * (uv + vec2(0.55, 0.));\n  lv*=1.8;\n  l += tree(lv);\n\n  l = saturate(l);\n\n  color *= 1. - uv.y*0.9;\n\n  return vec4(color, l);\n}\n\nfloat circle(vec2 uv, float radius, float blur)\n{\n  float circle = length(uv) - radius;\n  circle = smoothstep(blur, -blur, circle);\n  return circle;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = iTime * 1.0;\n  vec2 uv = (gl_FragCoord.xy \/ iResolution.x);\n  vec2 normalizedUV = gl_FragCoord.xy\/iResolution.xy;\n\n  uv.x -= 0.5; \n  \/\/uv.y -= (iResolution.y\/iResolution.x)*0.5;\n  \/\/uv.y\n  uv.y += 0.05;\n\n\n  vec4 col = vec4(0);\n\n  float blur = 0.001;\n  vec3 c1 = vec3(155.\/255.,197.\/255.,52.\/255.);\n  vec3 c2 = vec3(201.\/255.,45.\/255.,75.\/255.);\n  vec3 c3 = vec3(81.\/255.,169.\/255.,221.\/255.);\n\n  col.rg = uv;\n\n  uv *= 1.4;\n\n  vec4 b1 = body(uv, c1, 0.2, blur, 1.);\n  vec2 uv2 = rot(0.4) * (uv + vec2(0.2, 0.));\n  vec4 b2 = body(uv2, c2, 0.2, blur,2.);\n  uv2 = rot(-0.4) * (uv + vec2(-0.2, 0.));\n  vec4 b3 = body(uv2, c3, 0.2, blur,3.);\n\n  col = stars(uv, normalizedUV.y);\n  col = mix(col, b2, b2.w);\n  col = mix(col, b3, b3.w);\n  col = mix(col, b1, b1.w);\n\n  vec4 flr = flr(uv);\n  col = mix(col, flr, flr.w);\n  \/\/col = b1+b2;\n  \/\/col += body(uv, c1, 0.2, blur);\n\n  fragColor = vec4(col.rgb, 1.);\n}\n\n",
            "name": "Image",
            "description": "",
            "type": "image"
        }
    ]
}