{
    "text": [
      "but I can't compile or run your code on my machine. I'm using ubuntu16.04.\n\nmay be consider add a release deb\/appimage for linux? ",
      "[url=https:\/\/github.com\/iapafoto\/FractalOpenCL]Java\/OpenCL fractal playground[\/url]\n[url=https:\/\/github.com\/iapafoto\/Intro-4Kbyte-Kelenian]4K Intro version[\/url] ",
      "@neozhaoliang wow you found the opencl version, I had a lot of fun playing with all those fractals. In the git there is also a GLSL version of this for a 4K intro. I add links to comments. ",
      "incredible with such simple code! I learned a lot from your OpenCL code and exported some of them to glsl ...",
      "Beautiful",
      "oh yeah, this is much faster now. \nshame on everyone who neglects local const. unless you want to get the negative square root of a const minus itself, which will not be what you expect.",
      "Polygon, a fractal can be simplified by making it more kaleidoscopic, or by calculating some of its boundaries, and use these as bounding volumes.\nspherical (or elliptical) boundaries are simpler here, because they allow you to do (sphere) inversions and calculate (or quickly estimate) orbital escape times as break conditions.\n\nthe art is co find something recursive that looks less symmetric than it is, that can efficiently be iterated trough, with minor modifications for each iterations. an efficient lindemayer system.",
      "Love this!",
      "Thanks a lot iapafoto.\nYour change has improved the speed perfos by a factor of 10!\nOnly 3.0 fps, but I can enjoy the journey.\n\nI tried WITH_DOF: very nice render.",
      "I agree it is not easy!. I improved a bit my experimental technic by limiting the radius to the circle of confusion of the main pixel as in classical methods. At end the main (and only) advantage of this technic is to filter pixels that are not in the 3D dof cone what enale to remove some artfact on edges    ",
      "DOF is not easy. They way I tried it was to test the surrounding pixels with the current one to see if they were closer within a limit, and ignore those:- [url]https:\/\/www.shadertoy.com\/view\/MdyGRW[\/url] But even then there are problems of course.",
      "Add 3D geometric postprocessing DOF (It is an idea of me, but if it already exist in shadertoy, let me know)\nFor each neigbourg pixels, the algo recalculate the coresponding 3D pixelPoint and test if it is effectively in \nthe 3D cone (circle) of confusion of the pixel. Otherwise it is ignored.\n",
      "Thanks everybody  :)\n\n@ocb: I have removed the const on float array declaration. Read someware on the net that this could break the performance on  some engine. Hope it help. \n",
      "@Polygon\nIn fact the distance field estimator is incredibly simple (look at de function). You can find some documentation on 3D fractal distance estimator on\n[url=http:\/\/blog.hvidtfeldts.net\/index.php\/2011\/06\/distance-estimated-3d-fractals-part-i\/]Syntopia[\/url]\n[url=http:\/\/www.iquilezles.org\/www\/articles\/mandelbulb\/mandelbulb.htm]Mandelbulb[\/url]\n\nor by using\n\n[url=http:\/\/syntopia.github.io\/Fragmentarium\/]Fragmentarium[\/url]\n\nHave fun!  :)",
      "love this!",
      "This is incredible! How id it possible to render a 3d fractal? It seems impossible with ray marching because the distance function would be way too complex. It seems impossible with raytracing for the same reason. Is there some other method that I haven't heard of?",
      "looks great!",
      "Nice work!",
      "oh I ve just realized that, after adding text, I have commited it starting at picture 16 instead of 1 !!! Sorry !  :octopusballoon:",
      "the art of moving a camera trough a shape-shifting fractal.",
      "It seems to be absolutly beautifull!\nUnfortunatly I obtain only 0.3 fps.\nTOO BAD...",
      "Nice, nice, nice! I love the railing shapes.",
      "wow! awesome fractal journey!!",
      "Just STUNNING!!",
      "very nice",
      "Great cinematics.",
      "I've been watching this for a while. Really interesting formations.",
      "Amazing :octopusballoon:\t",
      "Wow!",
      "Nice :)"
    ],
    "date": [
      "1551020019",
      "1551014288",
      "1551014119",
      "1550931634",
      "1528065782",
      "1505859216",
      "1505856491",
      "1494248870",
      "1494157234",
      "1494016566",
      "1493997848",
      "1493987311",
      "1493798974",
      "1493798851",
      "1493779653",
      "1493759451",
      "1493645548",
      "1493594685",
      "1493583706",
      "1493505390",
      "1493502865",
      "1493497075",
      "1493492918",
      "1493482680",
      "1493476420",
      "1493472498",
      "1493469784",
      "1493461803",
      "1493425338",
      "1493423649"
    ],
    "username": [
      "neozhaoliang",
      "iapafoto",
      "iapafoto",
      "neozhaoliang",
      "shau",
      "ollj",
      "ollj",
      "834144373",
      "ocb",
      "iapafoto",
      "Dave_Hoskins",
      "iapafoto",
      "iapafoto",
      "iapafoto",
      "seb0fh",
      "Polygon",
      "kuvkar",
      "tehsauce",
      "iapafoto",
      "ollj",
      "ocb",
      "Dave_Hoskins",
      "flockaroo",
      "GregRostami",
      "aiekick",
      "public_int_i",
      "Shane",
      "GrosPoulet",
      "Duke",
      "iq"
    ],
    "userpicture": [
      "\/media\/users\/neozhaoliang\/profile.png",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/neozhaoliang\/profile.png",
      "\/media\/users\/shau\/profile.png",
      "\/media\/users\/ollj\/profile.jpeg",
      "\/media\/users\/ollj\/profile.jpeg",
      "\/media\/users\/834144373\/profile.jpeg",
      "\/media\/users\/ocb\/profile.jpeg",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/Dave_Hoskins\/profile.jpeg",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/seb0fh\/profile.jpeg",
      "\/img\/profile.jpg",
      "\/media\/users\/kuvkar\/profile.png",
      "\/media\/users\/tehsauce\/profile.jpeg",
      "\/media\/users\/iapafoto\/profile.png",
      "\/media\/users\/ollj\/profile.jpeg",
      "\/media\/users\/ocb\/profile.jpeg",
      "\/media\/users\/Dave_Hoskins\/profile.jpeg",
      "\/media\/users\/flockaroo\/profile.jpeg",
      "\/media\/users\/GregRostami\/profile.jpeg",
      "\/media\/users\/aiekick\/profile.jpeg",
      "\/img\/profile.jpg",
      "\/img\/profile.jpg",
      "\/media\/users\/GrosPoulet\/profile.jpeg",
      "\/img\/profile.jpg",
      "\/media\/users\/iq\/profile.png"
    ],
    "id": [
      "4lscWN",
      "4tscWN",
      "XtscWN",
      "MtfyDN",
      "Ms2yDh",
      "MlGGWy",
      "Mly3DG",
      "XsyXzd",
      "4sGXzt",
      "XsKXRc",
      "4dKSz3",
      "XdKXR3",
      "XsGSz3",
      "XdGSz3",
      "XsGXR3",
      "XsySR3",
      "XdKXRK",
      "MdySzV",
      "lsyXRV",
      "4dyXzV",
      "XdGXzV",
      "4dySzV",
      "4dGSzV",
      "XdGXRV",
      "4dySRV",
      "4sGSRV",
      "XsGSRV",
      "XdGSRV",
      "XsGSzK",
      "4dGSzK"
    ],
    "hidden": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ]
  }