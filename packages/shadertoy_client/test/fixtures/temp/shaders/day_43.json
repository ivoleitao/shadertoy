{
    "ver": "0.1",
    "info": {
        "id": "wt3XR4",
        "date": "1580477500",
        "viewed": 5408,
        "name": "Day 43",
        "username": "jeyko",
        "description": "Just fyi, i make these pretty fast, so don't expect clean code.",
        "likes": 72,
        "published": 3,
        "flags": 0,
        "usePreview": 0,
        "tags": [
            "mdtmjvm"
        ],
        "hasliked": 0
    },
    "renderpass": [
        {
            "inputs": [
                {
                    "id": "Xsf3zn",
                    "filepath": "\/media\/a\/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png",
                    "previewfilepath": "\/media\/ap\/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png",
                    "type": "texture",
                    "channel": 0,
                    "sampler": {
                        "filter": "linear",
                        "wrap": "repeat",
                        "vflip": "true",
                        "srgb": "false",
                        "internal": "byte"
                    },
                    "published": 1
                }
            ],
            "outputs": [
                {
                    "id": "4dfGRr",
                    "channel": 0
                }
            ],
            "code": "\n\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n#define mx (10.*iMouse.x\/iResolution.x)\n#define my (10.*iMouse.y\/iResolution.x)\n\n\nvec3 getRd(vec3 ro, vec3 lookAt, vec2 uv){\n\tvec3 dir = normalize(lookAt - ro);\n\tvec3 right = normalize(cross(vec3(0,1,0), dir));\n\tvec3 up = normalize(cross(dir, right));\n\treturn normalize(dir + uv.x*right + uv.y*up);\n}\nvec3 glowA = vec3(0);\nvec3 glowB = vec3(0);\nvec3 glowC = vec3(0);\nvec3 glowD = vec3(0);\n\n\n#define ITERS 4\n#define ZOOM (1. + my)\n#define pmod(p, x) mod(p,x) - 0.5*x\nfloat[] WS = float[ITERS](1.,1.,1.,1.);\n\nfloat id;\nfloat sd(vec3 q){\n\t#define repD 3.97\n    id = floor(q.z\/repD);\n    q.z = pmod(q.z, repD);\n    q.xy -= 2.;\n    q.xy = pmod(q.xy, 4.);\n    vec4 p = vec4(q.xyz, 1.);\n    vec4 c = vec4(0.9,0.77,0.4,0.2);\n    vec4 u = vec4(0.4,0.54,0.7,0.4);\n    for(int i = 0; i < ITERS; i++){\n        p.xyz = abs(p.xyz) - c.xyz;\n        float dpp = dot(p.xyz,p.xyz);\n        p=p*(1.5 + u)\/clamp(dpp,.4,1.)- mix(p,c,0.9)*0.9;\n        if(i==1)\n\t\t\tp.xy += 0.4;\n        p.xy *= rot(-0.1 + sin(id)*0.9);\n        \n        p.xz *= rot(0.9);\n        \/\/if(i == 2)\n        \/\/\tp.y += 0.9;\n        WS[i] = p.w;\n    }\n    \/\/w = p.z;\n    p.xyz = abs(p.xyz);\n    \n    p.xz *= rot(0.2);\n    float fr =  max(p.x - 0., max(p.y - 2.4 + sin(id)*0.7, p.z - 2.9))\/p.w;\n    float d = fr;\n        \n\treturn d*0.5;\n}\n\nvec2 map(vec3 p){\n\tvec2 d = vec2(10e5);\n    \n    d.x = min(d.x, sd(p));\n    \/\/d.x = min(d.x, length(p) - 0.6);\n    return d;\n}\nfloat D;\nvec2 march(vec3 ro, vec3 rd,inout vec3 p,inout float t,inout bool hit){\n\tvec2 d = vec2(10e5);\n    hit = false;\n    p = ro;\n    t = 0.;\n    for(int i = 0; i < 90; i++){\n    \td = map(p);\n        d.x *= D;\n        glowA += exp(-d.x*20.)*WS[0];\n        glowB += exp(-d.x*05.)*WS[1]*0.5;\n        glowC += exp(-d.x*10.)*WS[2];\n        glowD += exp(-d.x*50.)*WS[3]*0.7;\n        if (d.x < 0.001){\n        \thit = true;\n            break;\n        }\n        t += d.x;\n        p = ro + rd*t;\n    }\n    \n    return d;\n}\n\nvec3 getNormal(vec3 p){\n\tvec2 t = vec2(0.0002, 0);\n\treturn normalize(\n    \tmap(p).x - vec3(\n        \tmap(p - t.xyy).x,\n        \tmap(p - t.yxy).x,\n        \tmap(p - t.yyx).x\n        )\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 S = texture(iChannel0, vec2(0.01,0.0));\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)\/iResolution.y;\n\n    uv *= 1. + dot(uv,uv)*1.;\n    \n    vec3 col = vec3(0);\n    \n    \n    D = mix(0.8,1.,texture(iChannel0,20.*uv*256. + iTime*2.).x);\n    vec3 ro = vec3(0);\n    \/\/ro.x += sin(mx)*ZOOM;\n    \/\/ro.z += cos(mx)*ZOOM;\n    float m = sin(iTime*0.2);\n    ro.x += m*0.25;\n    ro.z += iTime + 14.;\n    vec3 lookAt = vec3(0);\n    lookAt.z = ro.z +1.;\n    \/\/lookAt.x += m*3.;\n    vec3 rd = getRd(ro, lookAt, uv);\n    \n    vec3 p;float t; bool hit;\n    \n    vec2 d = march(ro, rd, p, t, hit);\n    \n    #define pal(a,b,c,d,e) (a + b*sin(c*d + e))\n    if(hit){\n\t\tvec3 n = getNormal(p);\n        vec3 lD = normalize(vec3(1));\n        vec3 h = normalize(lD - rd);\n        float diff = max(dot(n, lD),0.);\n        float spec = pow(max(dot(n, h),0.), 20.);\n        float fres = pow(1. - max(dot(n, -rd),0.), 5.);\n    \t\/\/col += diff*fres*4.;\n        \n        vec3 CA = WS[0]*vec3(0.6,0.2,0.7)*0.01;\n        vec3 CB = WS[1]*vec3(0.6,0.2,0.7)*0.01;\n        vec3 CC = WS[2]*vec3(0.6,0.2,0.7)*0.01;\n        \/\/vec3 CD = WS[3]*vec3(0.1,0.9,0.4)*0.01;\n        \/\/vec3 CD = 0.05*WS[2]*pal(0.2, 0.6, vec3(0.8,0.4,0.7), 5.9 + sin(id)*0.2, 2.4);\n        vec3 CD = 0.05*WS[2]*pal(0.2, 0.6, vec3(0.8,0.4,0.7), 5.9 , 0.2 + S.x);\n        vec3 C = CA + CB + CC + CD; \n        \n        col += diff * 0.2;\n        col += pow(CD*0.9,vec3(2.));\n    } else {\n    \n    }\n    \n    vec3 G = vec3(0);\n    G += pow(glowD*0.004,vec3(1.))*pal(0.2, 0.6, vec3(0.8,0.4,0.7), 0.6, 2.4);\n    G -= pow(glowC*0.005, vec3(1.1))*pal(0.2, 0.4, vec3(0.8,0.4,0.7), 9.6, 2.4);\n    \n    G += glowB*0.002 *pal(0.2, 0.6, vec3(0.8,0.4,0.7), 5.99 - sin(iTime), 2.4);\n    G *= 1. + pow(S.x,5.)*0.2;\n    \n    col += G;\n    uv.y *= 1.5;\n    col *= 1. - dot(uv,uv)*0.1;\n    col = mix(col, vec3(0.5,0.4,0.35)*0.3, smoothstep(0.,1.,t*0.1 - 0.1));\n    \/\/col += glowB*0.004;\n    \/\/col += glow*0.006;\n    col = clamp(col, 0., 1.);\n    col = pow(col, vec3(0.7));\n    col = smoothstep(0.,0.94, col);\n\n    fragColor = vec4(col,1.0);\n}",
            "name": "Image",
            "description": "",
            "type": "image"
        }
    ]
}