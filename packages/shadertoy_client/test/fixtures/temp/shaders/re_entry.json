{
    "ver": "0.1",
    "info": {
        "id": "4dGyRh",
        "date": "1590524171",
        "viewed": 3879,
        "name": "Re-entry",
        "username": "nimitz",
        "description": "multi-layer volumetric rendering and geometry interaction. Getting 60fps in full-screen let me know if you get less and what's your gpu.",
        "likes": 74,
        "published": 1,
        "flags": 0,
        "usePreview": 0,
        "tags": [
            "space",
            "particles",
            "volumetric",
            "stars"
        ],
        "hasliked": 0
    },
    "renderpass": [
        {
            "inputs": [],
            "outputs": [
                {
                    "id": "4dfGRr",
                    "channel": 0
                }
            ],
            "code": "\/\/ Re-entry by nimitz (twitter: @stormoid)\n\/\/ https:\/\/www.shadertoy.com\/view\/4dGyRh\n\/\/ License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\/\/ Contact the author for other licensing options\n\n#define ITR 35\n#define FAR 15.\n#define time iTime\n\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\n\nvec3 objmov(vec3 p)\n{\n    p.xz *= mm2(-time*3.4 + sin(time*1.11));\n    p.yz *= mm2(time*2.7 + cos(time*2.5));\n    return p;\n}\n\nfloat tri(in float x){return abs(fract(x)-0.5)-.25;}\nfloat trids(in vec3 p){return max(tri(p.z),min(tri(p.x),tri(p.y)));}\nfloat tri2(in float x){return abs(fract(x)-.5);}\nvec3 tri3(in vec3 p){return vec3( tri(p.z+tri(p.y*1.0)), tri(p.z+tri(p.x*1.05)), tri(p.y+tri(p.x*1.1)));}                           \n\nmat2 m2 = mat2( 0.970,  0.242, -0.242,  0.970 );\nfloat triNoise3d(in vec3 p, in float spd)\n{\n    float z = 1.45;\n\tfloat rz = 0.;\n    vec3 bp = p;\n\tfor (float i=0.; i<4.; i++ )\n\t{\n        vec3 dg = tri3(bp);\n        p += (dg+time*spd+10.1);\n        bp *= 1.65;\n\t\tz *= 1.5;\n\t\tp *= .9;\n        p.xz*= m2;\n        \n        rz+= (tri2(p.z+tri2(p.x+tri2(p.y))))\/z;\n        bp += 0.9;\n\t}\n\treturn rz;\n}\n\nfloat map(vec3 p)\n{\n    p*= 1.5;\n\tp = objmov(p);\n    float d = length(p)-1.;\n    d -= trids(p*1.2)*.7;\n    return d\/1.5;\n}\n\nfloat map2(vec3 p)\n{\n    p = objmov(p);\n    return length(p)-1.3;\n}\n\nfloat march(in vec3 ro, in vec3 rd)\n{\n\tfloat precis = 0.001;\n    float h=precis*2.0;\n    float d = 0.;\n    for( int i=0; i<ITR; i++ )\n    {\n        if( abs(h)<precis || d>FAR ) break;\n        d += h;\n\t    float res = map(ro+rd*d);\n        h = res;\n    }   \n\treturn d;\n}\n\nvec3 normal(const in vec3 p)\n{  \n    vec2 e = vec2(-1., 1.)*0.04;   \n\treturn normalize(e.yxx*map(p + e.yxx) + e.xxy*map(p + e.xxy) + \n\t\t\t\t\t e.xyx*map(p + e.xyx) + e.yyy*map(p + e.yyy) );   \n}\n\nfloat gradm(in vec3 p)\n{\n    float e = .06;\n    float d = map2(vec3(p.x,p.y-e,p.z))-map2(vec3(p.x,p.y+e,p.z));\n    d += map2(vec3(p.x-e,p.y,p.z))-map2(vec3(p.x+e,p.y,p.z));\n    d += map2(vec3(p.x,p.y,p.z-e))-map2(vec3(p.x,p.y,p.z+e));\n\treturn d;\n}\n\n\/\/Main fireball\nfloat mapVol(vec3 p, in float spd)\n{\n    float f = smoothstep(0.0, 1.25, 1.7-(p.y + dot(p.xz,p.xz)*.62));   \n    float g = p.y;\n    p.y *= .27;\n    p.z += gradm(p*0.73)*3.5;\n    p.y += time*6.;\n    float d = triNoise3d(p*vec3(0.3,0.27,0.3) - vec3(0,time*.0,0),spd*0.7)*1.4 + 0.01;\n    d += max((g-0.)*0.3,0.);    \n   \td *= f;\n    \n    return clamp(d,0.,1.);\n}\n\nvec3 marchVol( in vec3 ro, in vec3 rd, in float t, in float mt )\n{\n\tvec4 rz = vec4(0);\n    #if 1\n    t -= (dot(rd, vec3(0,1,0))+1.);\n    #endif\n\tfloat tmt = t +15.;\n\tfor(int i=0; i<25; i++)\n\t{\n\t\tif(rz.a > 0.99)break;\n\n\t\tvec3 pos = ro + t*rd;\n        float r = mapVol( pos,.1 );\n        float gr =  clamp((r - mapVol(pos+ vec3(.0,.7,0.0),.1))\/.3, 0., 1. );\n        vec3 lg = vec3(0.72,0.28,.0)*1.2 + 1.3*vec3(0.55, .77, .9)*gr;\n        vec4 col = vec4(lg,r*r*r*2.5); \/\/Could increase this to simulate entry\n        col *= smoothstep(t-0.0,t+0.2,mt);\n        \n        pos.y *= .7;\n        pos.zx *= ((pos.y-5.)*0.15 - 0.4);\n        float z2 = length(vec3(pos.x,pos.y*.75 - .5,pos.z))-.75;\n        col.a *= smoothstep(.4,1.2,.7-map2(vec3(pos.x,pos.y*.17,pos.z)));\n\t\tcol.rgb *= col.a;\n\t\trz = rz + col*(1. - rz.a);\n\t\t\n        t += abs(z2)*.1 + 0.12;\n        if (t>mt || t > tmt)break;\n\t}\n\t\n    rz.g *= rz.w*0.9+0.12;\n    rz.r *= rz.w*0.5+0.48;\n\treturn clamp(rz.rgb, 0.0, 1.0);\n}\n\n\/\/ \"Particles\"\nfloat mapVol2(vec3 p, in float spd)\n{\n    p *= 1.3;\n    float f = smoothstep(0.2, 1.0, 1.3-(p.y+length(p.xz)*0.4));\n    p.y *= .05;\n    p.y += time*1.7;\n    float d = triNoise3d(p*1.1,spd);\n    d = clamp(d-0.15, 0.0, 0.75);\n    d *= d*d*d*d*47.;\n   \td *= f;\n    \n    return d;\n}\n\nvec3 marchVol2( in vec3 ro, in vec3 rd, in float t, in float mt )\n{\n    \n    vec3 bpos = ro +rd*t;\n    t += length(vec3(bpos.x,bpos.y,bpos.z))-1.;\n    t -= dot(rd, vec3(0,1,0));\n\tvec4 rz = vec4(0);\n\tfloat tmt = t +1.5;\n\tfor(int i=0; i<25; i++)\n\t{\n\t\tif(rz.a > 0.99)break;\n\n\t\tvec3 pos = ro + t*rd;\n        float r = mapVol2( pos,.01 );\n        vec3 lg = vec3(0.7,0.3,.2)*1.5 + 2.*vec3(1,1,1)*0.75;\n        vec4 col = vec4(lg,r*r*r*3.);\n        col *= smoothstep(t-0.25,t+0.2,mt);\n        \n        float z2 = length(vec3(pos.x,pos.y*.9,pos.z))-.9;\n        col.a *= smoothstep(.7,1.7, 1.-map2(vec3(pos.x*1.1,pos.y*.4,pos.z*1.1)));\n\t\tcol.rgb *= col.a;\n\t\trz = rz + col*(1. - rz.a);\n\t\t\n        t += z2*.015 + abs(.35-r)*0.09;\n        if (t>mt || t > tmt)break;\n        \n\t}\n\t\n\treturn clamp(rz.rgb, 0.0, 1.0);\n}\n\n\/\/ MIT Licensed hash From Dave_Hoskins (https:\/\/www.shadertoy.com\/view\/4djSRW)\nvec3 hash33(vec3 p)\n{\n    p = fract(p * vec3(443.8975,397.2973, 491.1871));\n    p += dot(p.zxy, p.yxz+19.27);\n    return fract(vec3(p.x * p.y, p.z*p.x, p.y*p.z));\n}\n\nvec3 stars(in vec3 p)\n{\n    vec3 c = vec3(0.);\n    float res = iResolution.x*0.8;\n    \n\tfor (float i=0.;i<4.;i++)\n    {\n        vec3 q = fract(p*(.15*res))-0.5;\n        vec3 id = floor(p*(.15*res));\n        vec2 rn = hash33(id).xy;\n        float c2 = 1.-smoothstep(0.,.6,length(q));\n        c2 *= step(rn.x,.0005+i*i*0.001);\n        c += c2*(mix(vec3(1.0,0.49,0.1),vec3(0.75,0.9,1.),rn.y)*0.25+0.75);\n        p *= 1.4;\n    }\n    return c*c*.65;\n}\n\nfloat curv(in vec3 p, in float w)\n{\n    vec2 e = vec2(-1., 1.)*w;   \n    float t1 = map(p + e.yxx), t2 = map(p + e.xxy);\n    float t3 = map(p + e.xyx), t4 = map(p + e.yyy);\n    return 1.0\/e.y *(t1 + t2 + t3 + t4 - 4. * map(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\tvec2 p = fragCoord.xy\/iResolution.xy-0.5;\n\tp.x*=iResolution.x\/iResolution.y;\n\tvec2 mo = iMouse.xy \/ iResolution.xy-.5;\n    mo = vec2(-0.27,0.31);\n\tmo.x *= iResolution.x\/iResolution.y;\n    const float roz = 7.3;\n\tvec3 ro = vec3(-1.5,0.5,roz);\n    vec3 rd = normalize(vec3(p,-1.5));\n    mo.x += sin(time*0.3 + sin(time*0.05))*0.03+0.03;\n    mo.y += sin(time*0.4 + sin(time*0.06))*0.03;\n    mat2 mx = mm2(mo.x*6.);\n    mat2 my = mm2(mo.y*6.); \n    ro.xz *= mx;rd.xz *= mx;\n    ro.xy *= my;rd.xy *= my;\n    \n\tfloat rz = march(ro,rd); \/\/march geometry\n    vec3 col = stars(rd);   \n    float maxT = rz;\n    if (rz > FAR)\n        maxT = 25.;\n    vec3 mv = marchVol(ro,rd, roz-1.5,maxT);\n    \n    if ( rz < FAR )\n    {\n        vec3 pos = ro+rz*rd;\n        vec3 nor= normal( pos );\n        float crv = clamp(curv(pos, 0.3)*0.35,0.,1.3);\n        \n        vec3 col2 = vec3(1,0.1,0.02)*(crv*0.8+0.2)*0.5;\n        float frict = dot(pos, normalize(vec3(0.,1.,0.)));\n        col = col2*(frict*0.3+0.7);\n        \n        col += vec3(1,0.3,0.1)*(crv*0.7+0.3)*max((frict*0.5+0.5),0.)*1.3;\n        col += vec3(.8,0.8,.5)*(crv*0.9+0.1)*pow(max(frict,0.), 1.5)*1.9;\n        pos = objmov(pos);\n        \n        col *= 1.2-mv;\n        col *= triNoise3d(pos*2.8,0.)*0.25+0.45;\n        col = pow(col, vec3(1.5,1.2,1.2))*.9;\n    }\n    col += mv;\n    col += marchVol2(ro,rd, roz-5.5,rz);\n\tcol = pow(col,vec3(1.4))*1.1;\n    \n\tfragColor = vec4( col, 1.0 );\n}",
            "name": "Image",
            "description": "",
            "type": "image"
        }
    ]
}