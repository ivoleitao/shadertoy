{
    "ver": "0.1",
    "info": {
        "id": "tdyBR1",
        "date": "1606653699",
        "viewed": 3747,
        "name": "Night circuit",
        "username": "gaz",
        "description": "3d",
        "likes": 61,
        "published": 1,
        "flags": 0,
        "usePreview": 0,
        "tags": [
            "3d"
        ],
        "hasliked": 0
    },
    "renderpass": [
        {
            "inputs": [],
            "outputs": [
                {
                    "id": "4dfGRr",
                    "channel": 0
                }
            ],
            "code": "#define TAU atan(1.)*8.\n\nvoid lookAt(inout vec3 rd,vec3 ro,vec3 ta,vec3 up){\n    vec3 w=normalize(ta-ro),u=normalize(cross(w,up));\n    rd=rd.x*u+rd.y*cross(u,w)+rd.z*w;\n}\n\nvoid pointAt(inout vec3 p, vec3 dir, vec3 up){\n    vec3 u=normalize(cross(dir,up));\n\tp=vec3(dot(p,u),dot(p,cross(u,dir)),dot(p,dir));\n}\n\nvoid rot(inout vec3 p,vec3 a,float t){\n\ta=normalize(a);\n\tvec3 u=cross(a,p),v=cross(a,u);\n\tp=u*sin(t)+v*cos(t)+a*dot(a,p);   \n}\n\nvoid rot(inout vec2 p,float t){\n    p=p*cos(t)+vec2(-p.y,p.x)*sin(t);\n}\n\n\/\/ https:\/\/www.shadertoy.com\/view\/WdfcWr\nvoid pSFold(inout vec2 p,float n){\n    float h=floor(log2(n)),a=TAU*exp2(h)\/n;\n    for(float i=0.;i<h+2.;i++)    {\n\t \tvec2 v=vec2(-cos(a),sin(a));\n\t\tfloat g=dot(p,v);\n \t\tp-=(g-sqrt(g*g+2e-3))*v;\n \t\ta*=.5;\n    }\n}\n\n#define seed 2576.\n#define hash(p)fract(sin(p*12345.5))\n\nvec3 randVec(float s)\n{\n    vec2 n=hash(vec2(s,s+215.3));\n    return vec3(cos(n.y)*cos(n.x),sin(n.y),cos(n.y)*sin(n.x));\n}\n\nvec3 randCurve(float t,float n)\n{\n    vec3 p = vec3(0);\n    for (int i=0; i<3; i++){\n        p+=randVec(n+=365.)*sin((t*=1.3)+sin(t*.6)*.5);\n    }\n    return p;\n}\n\nvec3 orbit(float t,float n)\n{\n    vec3 p = randCurve(-t*1.5+iTime,seed)*5.;\n    vec3 off = randVec(n)*(t+.05)*.6;\n    float time=iTime+hash(n)*5.;\n    return p+off*sin(time+.5*sin(.5*time));\n}\n\nfloat g1=0.,g2=0.,g3=0.;\n\n\/\/ rewrote 20\/12\/01\nvoid sFold45(inout vec2 p)\n{\n\tvec2 v=normalize(vec2(1,-1));\n\tfloat g=dot(p,v);\n\tp-=(g-sqrt(g*g+5e-5))*v;\n}\n\nfloat stella(vec3 p, float s)\n{\n    p=sqrt(p*p+5e-5); \/\/ https:\/\/iquilezles.org\/articles\/functions\n    sFold45(p.xz);\n\tsFold45(p.yz);\n    return dot(p,normalize(vec3(1,1,-1)))-s;\n}\n\n\/*\nfloat stella(vec3 p, float s)\n{\n    p=abs(p);\n    if(p.x<p.z)p.xz=p.zx;\n    if(p.y<p.z)p.yz=p.zy;\n    return dot(p,normalize(vec3(1,1,-1)))-s;\n}\n*\/\n\nfloat stellas(vec3 p)\n{\n    p.y-=-iTime;\n    float c=2.;\n    vec3 e=floor(p\/c);\n    e = sin(11.0*(2.5*e+3.0*e.yzx+1.345)); \n    p-=e*.5;\n    p=mod(p,c)-c*.5;\n    rot(p,hash(e+166.887)-.5,iTime*1.5); \n    return min(.7,stella(p,.08));\n}\n\nfloat structure(vec3 p)\n{\n    float d=1e3,d0;\n    for(int i=0;i<12;i++){\n    \tvec3 q=p,w=normalize(vec3(sqrt(5.)*.5+.5,1,0)); \n        w.xy*=vec2(i>>1&1,i&1)*2.-1.;\n        w=vec3[](w,w.yzx,w.zxy)[i%3];\n        pointAt(q,w,-sign(w.x+w.y+w.z)*sign(w)*w.zxy);\n        \n        d0=length(q-vec3(0,0,clamp(q.z,2.,8.)))-.4+q.z*.05;\n        d=min(d,d0);\n        g2+=.1\/(.1+d0*d0); \/\/ Distance glow by balkhan\n        \n        float c=.8;\n        float e=floor(q.z\/c-c*.5);\n        q.z-=c*clamp(round(q.z\/c),3.,9.);\n        \n        q.z-=clamp(q.z,-.05,.05);\n        pSFold(q.xy,5.);\n        q.y-=1.4-e*.2+sin(iTime*10.+e+float(i))*.05;\n        q.x-=clamp(q.x,-2.,2.);\n        q.y-=clamp(q.y,0.,.2);\n        \n        d0=length(q)*.7-.05;\n        d=min(d,d0);\n        if(e==2.+floor(mod(iTime*5.,7.)))\n            g1+=.1\/(.1+d0*d0);\n    }\n    return d;\n}\n\nfloat rabbit(vec3 p)\n{\n    p-=randCurve(iTime,seed)*5.;\n    rot(p,vec3(1),iTime);\n    float d=stella(p,.2);\n    g3+=.1\/(.1+d*d);\n    return d;\n}\n\nfloat map(vec3 p){\n    return min(min(stellas(p),structure(p)),rabbit(p));\n}\n\nvec3 calcNormal(vec3 p)\n{\n  vec3 n=vec3(0);\n  for(int i=0; i<4; i++){\n    vec3 e=.001*(vec3(9>>i&1, i>>1&1, i&1)*2.-1.);\n    n+=e*map(p+e);\n  }\n  return normalize(n);\n}\n\nvec3 doColor(vec3 p)\n{\n    if(stellas(p)<.001)return vec3(.7,.7,1);\n\treturn vec3(1);\n}\n\nvec3 hue(float h)\n{\n    return cos((vec3(0,2,-2)\/3.+h)*TAU)*.5+.5;\n}\n\nvec3 cLine(vec3 ro, vec3 rd, vec3 a, vec3 b)\n{\n    vec3 ab=normalize(b-a),ao = a-ro;\n\tfloat d0=dot(rd,ab),d1=dot(rd,ao),d2=dot(ab,ao);\n\tfloat t = (d0*d1-d2)\/(1.-d0*d0)\/length(b-a);\n    t= clamp(t,0.,1.);\n    vec3 p = a+(b-a)*t-ro;\n    return vec3(length(cross(p,rd)),dot(p,rd),t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * fragCoord - iResolution.xy) \/ iResolution.y;\n    vec3 col=vec3(.0,.0,.05);\n    vec3 ro = vec3(1, 0, int[](7,10,12,15)[int(abs(4.*sin(iTime*.3+3.*sin(iTime*.2))))&3]);\n    rot(ro,vec3(1),iTime*.2);\n    vec3 ta = vec3(2,1,2);\n    vec3 rd = normalize(vec3(p,2));\n    lookAt(rd,ro,ta,vec3(0,1,0));       \n\tfloat z=0.,d,i,ITR=50.;\n \tfor(i=0.; i<ITR; i++){\n    \tz+=d=map(ro+rd*z);\n    \tif(d<.001||z>30.)break;\n  \t}\n    if(d<.001)\n  \t{\n\t\tvec3 p=ro+rd*z;\n\t\tvec3 nor=calcNormal(p);\n    \tvec3 li=normalize(vec3(1,1,-1));\n    \tcol=doColor(p);\n    \tcol*=pow(1.-i\/ITR,2.); \n     \tcol*=clamp(dot(nor,li),.3,1.);\n    \tcol*=max(.5+.5*nor.y,0.2);\n    \tcol+=vec3(0.8,0.1,0.)*pow(clamp(dot(reflect(normalize(p-ro),nor),normalize(vec3(-1,-1,-1))),0.,1.),30.);\n    \tcol+=vec3(0.1,0.2,0.5)*pow(clamp(dot(reflect(normalize(p-ro),nor),normalize(vec3(1,1,-1))),0.,1.),30.);\n    \tcol=mix(vec3(0),col,exp(-z*z*.00001));\n    }\n    col+=vec3(.9,.1,0.)*g1*.05;\n    col+=vec3(0.,.3,.7)*g2*.08;\n    col+=vec3(.5,.3,.1)*g3*.15;\n \n    \/\/ https:\/\/www.shadertoy.com\/view\/wtXSzX\n    vec3 de;\n    ITR=40.;\n    for(float i=0.; i<1.;i+=1.\/7.)\n    {\n        de = vec3(1e9);\n        float off=hash(i*234.6+256.);\n    \tfor(float j=0.;j<1.;j+=1.\/ITR)\n    \t{\n            float t=j+off*0.5;\n        \tvec3 c=cLine(ro,rd,orbit(t,off),orbit(t+1.0\/ITR,off));\n        \tif (de.x*de.x*de.y>c.x*c.x*c.y)\n        \t{\n           \t\tde=c;\n           \t\tde.z=j+c.z\/ITR;\n        \t}\n    \t}\n        float s = pow(max(.0,.6-de.z),2.)*.1;\n        if(de.y>0.&&z>de.y)\n            col+=mix(vec3(1),hue(i),0.8)*(1.0-de.z*0.9)*smoothstep(s+0.17,s,de.x)*0.7;\n    }\n    col=pow(col,vec3(.8+.3*sin(iTime*.5+3.*sin(iTime*.3))));\n    fragColor.xyz = col;\n}\n",
            "name": "Image",
            "description": "",
            "type": "image"
        }
    ]
}