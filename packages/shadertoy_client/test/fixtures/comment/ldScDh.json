{
  "text": [
    "point\/=scalarA;",
    "instead of making false-perspective, how about putting a sphere inside another sphere. each sphere has its own distanceField, that is also scaled by a different scalar (before and after) mapInner() is the distance field, closest to the camera (whatever is in frame)\nmapOuter() is all background content (liminalSpace);\n\n#define scalarA 8.\n\nfloat mapOuter(vec3 p){ \/\/only executed, when mapInner misses or reaches its zFar (which is the boundary between the 2 spheres that seperate FramedSpace from liminalSpace ).\npoint*\/=scalarA; \/\/ by shrinking down p, we scale up the distanceFieldision.\nfloat r=sdBox(p-BoxOffset,boxSize);\nreturn r*scalarA ;}\n\n\/\/we may defer the r*8 scalar as much as possible. this may mean, that mapOuter() and mapInner() may have different epsilon for marching\/derivatives\/shadows , by simply scaling down the distanceField, by resacaling the Point and the disanceToObject.",
    "Took a quick pass and made it render 1.5x faster by adding some basic bounding volumes. It's 60 fps now in my PC at 1800x1013.",
    "How is this even possible?",
    "really amazing",
    "666 lines?",
    "I know all of your shapes are some kind of formula, so I made this with an online graphing calculator: \nhttps:\/\/www.desmos.com\/calculator\/ra2y0cpwp3",
    "Ridiculous... just ridiculous.. in a very good way",
    "Featured in this video :) ! [video]http:\/\/www.youtube.com\/watch?v=7BB8TkY4Aeg[\/video]",
    "wonderful, works for me on Linux with Firefox (now the browser of choice for Shadertoy). too bad i only get 3.5fps!",
    "Compiles on Windows but not Linux (with a Titan X):\n\n'texelFetch': no matching overloaded function found",
    "wow :)",
    "That's gorgeous!",
    "boah! jaw is dropping...",
    "I've been itching to see this as I'm having similar problems to gtoledo2 with new WEBGL on older mac. New PC loves it. The wait was worth it. Most impressive IQ :) ",
    "Oh, ok.\n\nNo, OS X El Capitan, Safari browser. Maybe relatedly, Shadertoy basically does not work in Chrome anymore. Not sure if it's a new WebGL standard, or what exactly changed.",
    "texelFetch( tex, px, 0 ) ---> textureLod( tex, vec2(px)\/iResolution.xy, 0.0 )\n\nBut.... are you running on a phone or something?",
    "What do you think is the most efficient way to replace texelFetch on non supported machines?",
    "Wow, this is beautiful! Really wish the coding session for UPENN is recorded and available online!",
    "Youtube video for those with slow computers [video]https:\/\/www.youtube.com\/watch?v=j5cctu1XGF0[\/video]",
    "This is stunning.",
    "Incredible!",
    "Beautiful results! Great composition and fantastic lighting iq. Inspiring as always.",
    "Nice aestethics. Postcard. :) ",
    "Inspring, beautiful shader!",
    "iq quality shader\nbut just 2.5 fps on my poor laptop",
    ":love: Awe inspiring.",
    "There really ought to be a shadertoy museum or art gallery of some kind",
    "wow!",
    "IQ has super human abilities!",
    "I love that fake GI! Runs at 40fps on a 1070m. \n\nThanks for the coding session btw, your work is inspiring!",
    "21 fps with a GTX 1080. Canvas size 1200x675.\nThis beautiful shader is worth every sacrificed frame. \ud83d\udc4c",
    "10.6 fps with angle 16 fps with openg on 750 ti. nice shader as usual",
    "Beautiful ! Love the sunset.\nSame performance issues as maurogik on same graphic card. ",
    "OMG!! :love:",
    "Hory shitoo..",
    "Beautiful! Awesome work!",
    "That looks fantastic ! (though 4 fps on my 660 laptop, I'll have to try it at work ;) )",
    "Looks awesome! 50fps on my desktop.",
    "Fixed the function name. Your machine must be broken, I get 30 fps in my laptop...",
    "line 315 textureCube(), what? well it is reserved namespace. should rename the function\n\n0.2 fps in a small preview. looks like iq is back to still images."
  ],
  "date": [
    "1621976400",
    "1621976352",
    "1621967636",
    "1611865076",
    "1584158804",
    "1574904144",
    "1540855709",
    "1532747176",
    "1532155237",
    "1503940895",
    "1501125228",
    "1494406983",
    "1494312429",
    "1493493182",
    "1493316152",
    "1493182889",
    "1493171117",
    "1493169361",
    "1493154976",
    "1493091480",
    "1493066152",
    "1493060882",
    "1493028337",
    "1493022847",
    "1493021307",
    "1493018886",
    "1493012906",
    "1493006355",
    "1492984361",
    "1492976321",
    "1492967980",
    "1492963832",
    "1492959721",
    "1492959046",
    "1492947633",
    "1492943991",
    "1492939619",
    "1492938106",
    "1492937130",
    "1492936311",
    "1492935979"
  ],
  "username": [
    "ollj",
    "ollj",
    "iq",
    "niels747",
    "LQC",
    "dmitrykolesnikovich",
    "scratch13764",
    "leacasas",
    "ttoinou",
    "dila",
    "etale_cohomology",
    "jt",
    "BigWIngs",
    "flockaroo",
    "shau",
    "gtoledo3",
    "iq",
    "gtoledo3",
    "starea",
    "iq",
    "masterxilo",
    "knarkowicz",
    "P_Malin",
    "pthextract",
    "Shakemayster",
    "iapafoto",
    "Shane",
    "tehsauce",
    "nolibab",
    "Virgill",
    "mmerchante",
    "frzi",
    "aiekick",
    "balkhan",
    "GregRostami",
    "Yrai",
    "PauloFalcao",
    "Maurogik",
    "kuvkar",
    "iq",
    "ollj"
  ],
  "userpicture": [
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/dmitrykolesnikovich\/profile.jpeg",
    "\/media\/users\/scratch13764\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/ttoinou\/profile.jpeg",
    "\/media\/users\/dila\/profile.png",
    "\/media\/users\/etale_cohomology\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/BigWIngs\/profile.jpeg",
    "\/media\/users\/flockaroo\/profile.jpeg",
    "\/media\/users\/shau\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/starea\/profile.jpeg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/knarkowicz\/profile.jpeg",
    "\/media\/users\/P_Malin\/profile.jpeg",
    "\/media\/users\/pthextract\/profile.jpeg",
    "\/media\/users\/Shakemayster\/profile.jpeg",
    "\/media\/users\/iapafoto\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/tehsauce\/profile.jpeg",
    "\/media\/users\/nolibab\/profile.png",
    "\/media\/users\/Virgill\/profile.png",
    "\/media\/users\/mmerchante\/profile.jpeg",
    "\/media\/users\/frzi\/profile.png",
    "\/media\/users\/aiekick\/profile.jpeg",
    "\/media\/users\/balkhan\/profile.jpeg",
    "\/media\/users\/GregRostami\/profile.jpeg",
    "\/media\/users\/Yrai\/profile.jpeg",
    "\/media\/users\/PauloFalcao\/profile.jpeg",
    "\/media\/users\/Maurogik\/profile.png",
    "\/media\/users\/kuvkar\/profile.png",
    "\/media\/users\/iq\/profile.png",
    "\/media\/users\/ollj\/profile.jpeg"
  ],
  "id": [
    "td2SW1",
    "wsjSW1",
    "td2XDh",
    "3dS3Wh",
    "4dVcDd",
    "XddcRN",
    "XdsfWs",
    "ldByDt",
    "XdByD3",
    "4tyGWD",
    "llcGDj",
    "4sVXzd",
    "lsySRd",
    "4sGSzV",
    "XsKXzy",
    "MdGSzG",
    "lsyXRG",
    "MdyXRG",
    "MsySRG",
    "XsySzy",
    "4dyXRy",
    "4sGSRy",
    "4sySzG",
    "XdySzG",
    "4sGSzG",
    "XsGSzG",
    "4syXRG",
    "XsySRG",
    "lsKXDm",
    "ldVSDm",
    "ldKSDm",
    "lsVXWm",
    "MsKXWm",
    "lsKXWm",
    "lsVSWm",
    "MdVSWm",
    "lsKSWm",
    "MsVXDw",
    "MdVXDw",
    "MsKXDw",
    "MdKXDw"
  ],
  "hidden": [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ]
}
