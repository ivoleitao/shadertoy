{
  "text": [
    "I am learning a ton from your code and accompanying video, thanks!!",
    "It was a leftover. Removed.",
    "Is line 308 a typo, or what is its purpose?",
    "On my windows machine (core i7 6700K and GTX1080ti) it does 30 fps on 1800x1013 and 60 fps on 1200x675. If I zoom to mobile mode on my 4k desktop (by zooming in with the browser) I can get it to run at 2577x1124 at around 16fps and around 10fps on 3610 x 1405 (I'm guesing it syncs to the refresh rate to a divider of 60).",
    "Casually, from visual tests in a shop(!) I'd guess the M1 in their iMac's is about the equivalent to my old GTX 1060, which isn't really all that bad.\nI have a 2017 Intel iMac (Radeon Pro 580) that does about 22fps at 1280x720 \nOn my main dev machine, I'm getting 60fps at 1200x675. I can't get it to render any larger on Windows 10 without going full screen, I don't know why, but the text editor wants to take up a lot of the screen on Windows. This is on a 4K monitor with no DPI scaling.",
    "@iq It's apple there is hardly anything to configure ;) Theoretical fp32 performance should be around 5 TFLOPS for FP32. Angle is configured to use OpenGL, I ould set it to Metal (Apple's vulkan like API) but  I've had bad experience with that since the chrome support for that is lagging behind.\n\nSafari does 20-25fps on 1280x720 resolution, the M1 is an ARM processor with an IGP. There are no fans running as far as i can hear",
    "I have 4.5 fps at 640x360 on my  nVidia Quadro K2100M.\nSometime perfs are very different on OpenGL vs Windows",
    "(in 800x450 resolution)",
    "Firefox on Linux with AMD Radeon Vega 3 Graphics (RAVEN2) 4.5 fps",
    "I don't know anything about Mac computers, but 31-38 fps is really slow, I'm getting 60 fps in my 7 years old laptop. Maybe you have hardware rendering disabled or some other thing misconfigured.",
    "Notebook Mac M1 Pro 16\" 16-core GPU version in chrome\n1280 x 720 on laptop screen between 14 and 18 fps\n800 x 450 on tv screen between 31 and 38 fps",
    "Another datapoint for 3080 12GB on debian 11 (xfce, no wayland, no overclock):\nFluid 60fps in 1920x1200 in chromium, stuttery <60fps in firefox",
    "GTX 3080 benchmark:\nconstant 60 fps in 945x531 on all browsers\nconstant 60 fps in 1805x737 in some browsers (firefox and operaGX underperform, not having constant 60fps, MicrosoftEdge performed best in win11)\neasily 55 fps in 1796x1054 via MicrosoftEdge (my fullscreen resolution is lower, this is mousewheel-up oversized-canvas)\n30 fps in 1710x1686\nHigher resolutions still maintain 30 fps, but I can't tell the resolution due to suboptimal formatting on smaller displays.",
    "col *= 0.5 + 0.5*pow( 16.0*p.x*p.y*(1.0-p.x)*(1.0-p.y), 0.05 ); \/\/is like a [url=https:\/\/www.shadertoy.com\/results?query=vignette]vignette[\/url], darkening the border-\n col *= 0.5*pow( 16.0*p.x*p.y*(1.0-p.x)*(1.0-p.y), 0.55 ); \/\/is an exaggerated variant",
    "What is the post-processing you're doing on the color using the uv?",
    "I love these math paintings you create, and the explanation videos are excellent! Good Job!",
    "[This comment has been hidden by the shader author]",
    "stunning!",
    "Extraordinary shader",
    "Extremely beautiful.",
    "The loop counters are scalar",
    "@iq I checked the difference of loop unrolling using a certain vendor shader compiler software\n1. The shader is 43028 bytes with loop unrolling, but only 20120 bytes when forcing loops. Having bigger size is terrible, because it actually causes a lot of cache thrashing\n2. LDS is used with loop unrolling. Not sure why it's used, but using it will introduce some waits when multiple threads access the same LDS.\n3. Looks like forcing a loop increases the scalar ALU, so maybe some operator become scalar instead of vector? Very hard to say for sure though.\nunroll:\nScalar ALU:           318\nVector ALU:           7363\nforce loop:\nScalar ALU:           327\nVector ALU:           3223\n\nI think the biggest win is the binary code size, which makes sense.",
    "Sorry for the small windoiw, i'm working on a 4k television. The UI still needs updates for smaller screens. I'm working on controls rendered by shaders so you can build synthesizer front panels with it as well. My current plan is to finish it to a complete synth builder and DAW, then seperate it into a musicians part and a programmers part. Programmers can then push their synth creations for the musicians to use, i allready bought the synthastic.com domain for the musicians part.",
    "cool ! but the code window is really small.\n",
    "@FabriceNeyret & @iq What do you think of my new hobby project. \nhttps:\/\/shadersynth.com\nI'm making a synthesizer that runs on shaders, I got inspired by the sound shader here. You can create instruments and effects with shaders like here. It plays midi files, it currently loads \"Great gig in the Sky\" by Pink Floyd and you can start it with the \"play\" button. It doesn't have a backend yet and stores everything in local storage for now.",
    "thanks !\nit's no longer chrome.exe --use-angle=gl  ?\n",
    "I forcesd chrome to use OpenGL by setting \"Choose ANGLE graphics backend\" on OpenGL in chrome:\/\/flags. Compile time for both is now around 0.5 seconds and fps is also consistent around 32fps. Must be something in combination with D3D. Modern GPU's do have loop and branch support, didn't realy think about the branch predictor remark, but it does indeed make sense a GPU doesn't have any since it runs blocks of code parallel.",
    "NB: all functions get inlined. There is no stack on GPU.\nAnd it seems very unlikely there is branch prediction as well.",
    "@Andre: could you please force your firefox\/chrome to OpenGL mode and proceed the same benches ?",
    "Compile time goes from 9.2 secs to 1.6 secs on my GTX 1070  Windows 10. FPS goes from 11 to 32fps (1200 x 675). (changed define of ZERO to 0 for 1st results)\n\nMaybe the noise functions get inlined, that together with loop unrolling could lead to large code size which is maybe bigger then the GPU's fastest code cache? Branch prediction has also grown over the years so maybe the penalty for not unrolling isn't as high as it used to be.",
    "@iq: 1.2x faster [by]\u00a0preventing loop unrolling\n\nHow strange ! is it true on OpenGL too ? \nVery strange, preventing unrolling generally slow things, and for good reasons.\nCode cache: I once add to an Nvidia tech, and it seems almost impossible to fail the code cache (of course, but with dedicated code, plus these guys don't always know how extreme our shaders are :-D ).\nNow, for the optimizer there seem to be windowed range, so who knows in this case.\nBut first, I'm curious whether the gain is in the same direction in OpenGL vs Windows, or Nvidia vs else. Also, the recent Vulkan-based compilers react very differently (sometime worse perfs, sometime better). \n\nDetail: for the first minute or so the perfs oscillate really a lot, before stabilising at 8.6 fps at 640x360.",
    "Now the shader runs 1.2x faster and compiles almost 4 times faster. For the curious, all I did was preventing loop unrolling for all the fbm() functions. That lowered the compile time from 4 seconds to 1 for me. On the other hand I'm not sure why that improves performance, but it does. All I can hypothesize is that perhaps there's a code cache in the GPU to speed up instruction fetching and loops help keep the relevant code in the cache for a longer time? Regardless, it helped with a 40% speedup in my GPU. I used that extra performance to tweak the visuals and make the shader look better, while still leaving a 1.2x overall performance improvement. So, triple win.",
    "@jarble: well, your depth buffer cuts the trees on the silhouette !",
    "I tried [url=https:\/\/www.shadertoy.com\/view\/tltBWr]adding a depth buffer[\/url] to speed up the framerate. It seems to be only slightly faster.",
    "again, webGL is not ADA, I doubt the norm now forbid patterns for style issue (and efficience is coder busyness).\nAlso, the point is absolutely not about the scope: global variables are still permitted. It is only about where there initialization is done. On a compiler point of view, I don't see how init at global declaration differs to init at the beginning of main(). It could even be compiled that way.",
    "it is lazy bad style to have global mutable.\nyou want short scopes for efficiency.\n\nin webgl2 you can more easily have longer lists and have more types in them, or invert large matrices, and that may just crash a lot more of parsing or runtime, if long lists have global scope, in some deconstructing ANGLE parsing.",
    "Yes. My question was: what was the motivation to no longer allow this, while it was ok in webGL1: what is the constraint on compilers that suggest one should better no longer allows it.",
    "No global mutable outside of functions.",
    "@ollj   WebGL 2 obviously still does global variable. It just no longer allows their non-const global initialization at declaration. \n( I wonder the motivation behind this change, though ).",
    "my [url=https:\/\/www.shadertoy.com\/results?query=compatib&sort=newest&filter=compatib]compatib[\/url]e shaders share a [compatibility core] for WebGL 1.\nmain issue are; no ivecN() types, no integer modulo, no inverse(), many list restrictions.\nWebGL 2 no longer does global variables.",
    "After managing to get the shader working with WebGL 1, I'm seeing a stable 10 FPS on 576 x 324 on a GTX 260. Works in fullscreen too, but it's, judging by eye, about 1-2 fps.",
    "on a 3090 its smooth at 3840x1600 :)",
    "So goood",
    "similar, even on newer GPU this doesn't quite reach 60fps.",
    "Getting 25 fps on 4K fullscreen using RTX 3080 FE. Otherwise, 60 FPS.",
    "Make sure Chrome\/Firefox\/Edge is running on your GeForce card instead of the integrated GPU. It [b]is[\/b] a heavy shader, runs at 60 fps on my laptop but at 2 fps on my phone. I should probably take a pass at optimizing something.",
    "My iGPU is having a HORRIBLE time rendering this.",
    "cool",
    "says 1.1 but its much more like 0.1 fps @ 800 x 450 on my \"Intel integrated\" lolz",
    "I am only getting mid 40's fps with a 1070 gtx at 640x360",
    "I meant to say... 40 fps at 640x360. Went down below 10 fps at 1080x1920. pity because it's incredible at that resolution.",
    "Wowser, hovering around 40fps on my nvidia g980 win7 chrome.\nReminds me of the scenery in Crysis, only better",
    "nice",
    "@Teppich It works extraordinarily well. In fact, I couldn't see a difference except in speed for the rainforest when I did it. I did it in one of the raymarching loops, along with once the point is returned, before it gets rendered. Also, one other speed improvement is checking for the camera storage positions before raymarching.",
    "@ShadowFlare I've been looking into terminating rays early when they're less than half a pixel away from an sdf 'surface'. How did you know when to discard the ray? As in, how does rasterization + comparison work for you?",
    "I was also able to boost the fps to 30 on my gpu by doing a few tricks which didn't make it lose any quality, such as discarding raytracing if the pixel difference wouldn't be visible on the screen via rasterization of the points and comparing them.",
    "Got the river, just need to figure out why it isn't fading out properly.",
    "I think I'm gonna add a small river in the background, in the canyony part. Is there any way to label that part?",
    "it looks so awesome. Keep up the perfect job",
    "965M\uff1a15.5-17.9fps",
    "Thanks, that helps explain it. I also saw something else (I think it was by P_Malins) that helped too.",
    "@scratch13764 He's using a small portion of the ch0's output buffer to store the current camera transform (ca[0], ca[1], ca[2]), so that he can read it in the next frame as oldCam.\n\nThen he transforms the current frag's world space position to screen space and reverts (undoes) the screen space shifting o in order to get an aligned frame (o is used to slightly shift the rendering, so that when mixing with the new frame, partial super-sampling is effectivelly achieved - this is one of the most clever and effective AA techniques I've seen).\n\nAfter that, he goes from screen space to raster space, samples the old frame (texLod(ch0, spos)) and mixes in the new color. The output is essentially used as a IIR history \/ accumulation buffer.",
    "Can someone explain how the old frame averaging works in this? I can see that the frame is mapped to the terrain and it's really freaking me out how it works.",
    "Amazing!",
    "for mouse control camera rotation (only slow movements, please :-) :\nadd in bufA line 834\n    vec2 A = 3.14*(2.*iMouse.xy\/iResolution.xy-1.);\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n    ta = vec3(0,0,1); ta.xz *= rot(A.x);  ta.yz *= rot(-A.y); \n    ta += ro;\n",
    "looks like the sight from my living room :-)",
    "Next project: GTA V",
    "It's awesome graphics!!!!!\n\nTIP: if you want to run in IE change \"textureLod\" to \"texture\"\n",
    "Insane. Level god. ",
    "@hammedshh, because it's raymarched, because there are no meshes, because it's running on WebGL, because your GPU is not meant to run this. In normal OpenGL this would be full framerate in HD. But this is not what Shadertoy is about",
    "@hamedshh - That's nearly a 6 year old gfx card!  :)  I have a gtx680 and that's 26fps in a window...",
    "why is it run slowly with 8.8 fps on my PC whereas i have GT630 as Graphic card and core i5 as CPU ",
    "i think a [foggy valley] would look good (as in, easily believable and high geometry detail) and have good performance, even when valleys are seeded noise.\nFog in valleys basically replaces the occlusion that a mountain would have there otherwise.\n\nmost people do distance fog poorly, by making it spherical around the camera, and not making it diminishing fog with increasing height. google image search [fog valley] for inspiration. most photos look down into valleys, because looking out of a fog is just not as characteristic.\n\ndiminishing fog by height (volume marching a cloud in a valley) makes it easy to look \"up\" from inside a foggy valley, so you likely see birds and nearby mountain peaks.\nThis mostly diminishes looking nearly-horizontally along or trough a foggy valley.\nThen you put all your high detail geometry inside a foggy valley  (along rivers), where it is more realistically occluded by fog and surrounded by either mountains or more valley-fog.\n\nyou can fly into valleys and over them, giving the illusion of more detail than there is per frame, from memory of what you saw there.",
    "so sick!! but yes, a bit heavy load.",
    "Looks beautiful. I just wish my GPU did better than 26fps. (1070)",
    "Awesome colors :D Thats great",
    "Colours and shading are amazing.",
    "[This comment has been hidden by the shader author]",
    "I can hear the rainforest inside my laptop when this runs.... \"Whooosh\"",
    "30fps on a Titan X (Maxwell), Ubuntu, for me. Is the 1080 simply better than the old Titan X?",
    "Very nice lush colors :)",
    "I\u00f1igo, cada vez estoy m\u00e1s impresionado de tus habilidades. Incre\u00edbles tus trabajos.",
    "Wow :)",
    "TAA = Temporal Anti Aliasing",
    "What's TAA refer to in the source comments?",
    "It looks like Intel is not affected by this weirdness: 5fps in chrome in both desktop and Angle modes",
    "Canvas: 800x450, Windows 10, GTX 980 Mobile\r\n\r\nRainForest: 23 fps Microsoft Edge\r\nRainForest: 15 fps Chrome (Angle)\r\nRainForest: 35 fps Chrome with --use-gl=desktop\r\nRainForest: 15 fps Firefox (Angle)\r\nRainForest: 28 fps Firefox with Disable.Angle (and zero compilation time)\r\n\r\nSnail: 30 fps Microsoft Edge\r\nSnail: 44 fps Chrome (Angle)\r\nSnail: 60 fps Chrome with --use-gl=desktop\r\nSnail: 34 fps Firefox (Angle)\r\nSnail: 44 fps Firefox with Disable.Angle (and zero compilation time)\r\n\r\nClearly, Angle (Firefox and Chrome's WebGL\/GLSL to DirectX\/HLSL translation layer) is fucking things up quite a bit...\r\n\r\nRainforest: [url]https:\/\/www.shadertoy.com\/view\/4ttSWf[\/url]\r\nSnail: [url]https:\/\/www.shadertoy.com\/view\/ld3Gz2[\/url]",
    "Canvas : 800x450, Chromium, Debian Linux, GTX 1070\nSnail: 60fps\nRainForest: 60 fps",
    "Ok, Canvas 800x450, Chrome Win 10 GTX1070\nSnail: 60 fps\nRainforest: 30 fps\nRight click, inspect in chrome and you can also read the size of the canvas in the attributes of the canvas",
    "To those people getting 60fps in this shader with 1060\/1070\n\nCould you please test theIQ's Snail shader and tell me the fps? Please make sure you are in the 1080 layot and canvas is 800x450 (you can check the canvas size with Fabriceneyret2's iResloution shader)",
    "Thanks for the detailed info Andre. Let me know Casty how your investigations go",
    "6700K and a GTX1070 here on Chrome and Win10.\n60fps on smallest browser window (canvas is 500x281)\n14 when i make browser window bigger (canvas is 1200x675)\n\nEdge browser gives me 20fps on largest in browser (canvas 1200x675)\nFirefox ~23fps varies between 20 and 28",
    "IQ, \n\nI'm getting 20fps which is way more than any Intel can do. And it is shader dependent, Snail and pool shaders do run at their theoretical speed. So it has to be something else. At least other ppl are running at 60fps so I should be able to troubleshoot it.\n\nThanks",
    "Browser seems to make a big difference: 54.1 fps in Chrome, 60.0 fps in Firefox, on a 1080 (Windows 10).",
    "Absolutely incredible. Thanks for sharing!",
    "Awesome!!!. 60 Fps on 1070 ",
    "Also, a friend said the 1060 was balcklisted on his Chrome, he had to enable it by hand, otherwise the Intel was kicking in for him too.",
    "It should run at about 60 fps on your 1060 Casty. Are you in a laptop? You are probably using the Intel integrated card (close all browser tabs and restart Chrome with right_click + Nvidia GPU). We have tested on a 1060M, it does run full framerate. It is 16 fps on my (now old) 980M.",
    "@834144373 I don't know why I'm getting only 20fps with my 1060, are you using the 1080 layout? ",
    "Brilliant!! Love your works so much!\nI hope I can code such beautiful things like all genius here.\nUnfortunately, I have no graphic mathematics concepts. How to learn from the beginning?",
    "haha... 50.5fps on GTX1060",
    "Outstanding, as always! ^^ \n\n@keelo \n\"fbm\" stands for [url=https:\/\/thebookofshaders.com\/13\/]\"Fractal Brownian Motion\"[\/url]",
    "Very impressive !",
    "I'm in awe, beautiful work.",
    "Please tell us you're working on a new demo. I REALLY would love to see Elevated 2.",
    "gorgeous! what does fbm stand for?",
    "Great work! ",
    "padauz!! so much detail... i really like the clouds falling over the mountains",
    "Amazing. The best looking single shader terrain scene to date.",
    "Fixed, I hope!",
    "@iq, in renderTerrain function out variables teShadow and teDistance are not initialised\/set in all program paths. Because of the uninitialised teDistance on mac mini the sky is corrupted. I can't see the difference due to teShadow, but surely it should be initialised.\nbtw 25 fps in smallest resolution (500x280) on mac mini with intel iris. 13 fps in 640x360. :D",
    "The sense of magnitude in this scene is great, appears far from finite!",
    "Wow...",
    "Beautiful, beautiful terrain running at 19 fps on my workstation!",
    "Awesome!",
    "A little slow, but looks incredible! ",
    "Incroyable ! Are you working for the \"next Avatar movie\"or just preparing the next elevated 4k - 10th  happy birthday ? ;-p",
    "excellent. 0.7 fps in rdp software mode",
    ":love:",
    "It is a bit strange, I'm getting 20 fps with the GTX1060, but the old Quadro 4000M (equivalent to GTS 450) is showing 7 fps\n\nIn other shaders I get the theoretical 700% diference (Snail and Pool to name a couple)",
    ":love: the lack of aliasing! Nice clouds and backdrop too. It is very slow though.",
    "It's insanely good. Almost can't believe my eyes.",
    "Gobsmacked. Pure Magic!",
    "few lines?? have you missed the 'Buf A' tab? ;)",
    "fantastic!",
    "This is Incredibly Awesome! WOW!!! ",
    ":love: A movie quality scene constructed with a few lines of text by one person. Utterly amazing!",
    "Awesome.",
    "1fps in fullscreen on a GTX950. Totally worth it :-D",
    "Hell Yeah! Brilliant! :love:\nCan't stop watching it...",
    "Breathtaking!",
    "It looks stunning! quite literally as I have been staring at it for more than 20 minutes...\nThe strokes in the clouds are intriguing, very painterly.",
    "This resembles a photograph. Both in realism and framerate :D",
    "Amazing!"
  ],
  "date": [
    "1660859121",
    "1660785332",
    "1660779910",
    "1657879253",
    "1657642739",
    "1657612396",
    "1657610466",
    "1657607739",
    "1657607673",
    "1657574216",
    "1657390313",
    "1652439374",
    "1651228089",
    "1650919413",
    "1650881545",
    "1650303965",
    "1647303469",
    "1647285651",
    "1646588367",
    "1623660385",
    "1620318282",
    "1620317666",
    "1614075631",
    "1614026715",
    "1614024882",
    "1614024693",
    "1614021639",
    "1614008472",
    "1614008363",
    "1614003672",
    "1613803661",
    "1613793826",
    "1612608487",
    "1612555720",
    "1611737306",
    "1611684505",
    "1611683516",
    "1611679461",
    "1611649351",
    "1611595741",
    "1611591837",
    "1609696407",
    "1607449993",
    "1604235951",
    "1601571097",
    "1599005144",
    "1598998444",
    "1584710140",
    "1581134834",
    "1575795500",
    "1569003985",
    "1569003860",
    "1565605794",
    "1561665460",
    "1561645852",
    "1561337413",
    "1561139324",
    "1561134249",
    "1558363731",
    "1557063251",
    "1551848324",
    "1548941457",
    "1547621567",
    "1529399552",
    "1525971048",
    "1525936724",
    "1525369606",
    "1521387437",
    "1514949551",
    "1514264651",
    "1513029933",
    "1513029491",
    "1510144676",
    "1510127308",
    "1508603375",
    "1504262726",
    "1504171629",
    "1495327859",
    "1495266309",
    "1491780849",
    "1488085976",
    "1487762943",
    "1487332172",
    "1486075927",
    "1485965722",
    "1483142077",
    "1483138975",
    "1483093621",
    "1483085786",
    "1483081991",
    "1482990606",
    "1482945870",
    "1482934219",
    "1482930746",
    "1482930217",
    "1482920028",
    "1482902415",
    "1482902356",
    "1482852120",
    "1482832524",
    "1482824213",
    "1482749621",
    "1482694130",
    "1482547761",
    "1482546667",
    "1482525319",
    "1482518409",
    "1482501901",
    "1482489793",
    "1482481111",
    "1482476988",
    "1482475388",
    "1482451944",
    "1482447326",
    "1482432734",
    "1482430049",
    "1482429077",
    "1482426933",
    "1482426640",
    "1482425744",
    "1482423302",
    "1482420896",
    "1482420380",
    "1482411678",
    "1482408971",
    "1482407983",
    "1482405720",
    "1482403516",
    "1482401327",
    "1482398544",
    "1482395991",
    "1482395425",
    "1482392786",
    "1482392138"
  ],
  "username": [
    "dkirkby",
    "iq",
    "dkirkby",
    "Andre",
    "Dave_Hoskins",
    "Andre",
    "FabriceNeyret2",
    "jt",
    "jt",
    "iq",
    "Andre",
    "nilrem",
    "ollj",
    "ollj",
    "ejosiah",
    "BenVlodgi",
    "cxm",
    "elenzil",
    "ocb",
    "lz",
    "ollj",
    "Gaktan",
    "Andre",
    "FabriceNeyret2",
    "Andre",
    "FabriceNeyret2",
    "Andre",
    "FabriceNeyret2",
    "FabriceNeyret2",
    "Andre",
    "FabriceNeyret2",
    "iq",
    "FabriceNeyret2",
    "jarble",
    "FabriceNeyret2",
    "ollj",
    "FabriceNeyret2",
    "ollj",
    "FabriceNeyret2",
    "ollj",
    "ado1928",
    "Serg",
    "me_123",
    "ollj",
    "camjay",
    "iq",
    "Aesthetical",
    "JasonLee",
    "realcyg",
    "0X800007D0",
    "Cotterzz",
    "Cotterzz",
    "kinglarfy",
    "ShadowFlare",
    "Teppich",
    "ShadowFlare",
    "ShadowFlare",
    "ShadowFlare",
    "Mary_Cream",
    "Geralt_of_China",
    "scratch13764",
    "spawner64",
    "scratch13764",
    "yuletian",
    "FabriceNeyret2",
    "FabriceNeyret2",
    "akhgary",
    "songinnight",
    "jpupper",
    "iq",
    "Dave_Hoskins",
    "hamedshh",
    "ollj",
    "jcyuan",
    "Uneclipsed",
    "Osgrot",
    "Docculd",
    "zproxy",
    "dagelf",
    "etale_cohomology",
    "Passion",
    "Damasko",
    "jt",
    "mag",
    "SarahC",
    "casty",
    "iq",
    "manolopm",
    "Andre",
    "casty",
    "iq",
    "Andre",
    "casty",
    "Jacoby",
    "Jacoby",
    "manolopm",
    "iq",
    "iq",
    "casty",
    "siuyy",
    "834144373",
    "revers",
    "Phi",
    "public_int_i",
    "GregRostami",
    "keelo",
    "stb",
    "flockaroo",
    "drift",
    "iq",
    "coyote",
    "KylBlz",
    "Draedrus",
    "starea",
    "dila",
    "BigWIngs",
    "Unix",
    "zproxy",
    "Duke",
    "casty",
    "Dave_Hoskins",
    "kuvkar",
    "shau",
    "xeronimo74",
    "iapafoto",
    "PauloFalcao",
    "Shane",
    "mantra",
    "russ",
    "coyote",
    "GregRostami",
    "blackjero",
    "s23b",
    "xeronimo74"
  ],
  "userpicture": [
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/Dave_Hoskins\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/cxm\/profile.jpeg",
    "\/media\/users\/elenzil\/profile.jpeg",
    "\/media\/users\/ocb\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/iq\/profile.png",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/me_123\/profile.png",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/Cotterzz\/profile.jpeg",
    "\/media\/users\/Cotterzz\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/Mary_Cream\/profile.jpeg",
    "\/media\/users\/Geralt_of_China\/profile.jpeg",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/spawner64\/profile.jpeg",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/yuletian\/profile.png",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/media\/users\/FabriceNeyret2\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/media\/users\/Dave_Hoskins\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/media\/users\/jcyuan\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/Osgrot\/profile.jpeg",
    "\/media\/users\/Docculd\/profile.png",
    "\/media\/users\/zproxy\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/etale_cohomology\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/834144373\/profile.jpeg",
    "\/media\/users\/revers\/profile.gif",
    "\/media\/users\/Phi\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/GregRostami\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/stb\/profile.jpeg",
    "\/media\/users\/flockaroo\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/KylBlz\/profile.jpeg",
    "\/media\/users\/Draedrus\/profile.png",
    "\/media\/users\/starea\/profile.jpeg",
    "\/media\/users\/dila\/profile.png",
    "\/media\/users\/BigWIngs\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/zproxy\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/Dave_Hoskins\/profile.jpeg",
    "\/media\/users\/kuvkar\/profile.png",
    "\/media\/users\/shau\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/iapafoto\/profile.png",
    "\/media\/users\/PauloFalcao\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/GregRostami\/profile.jpeg",
    "\/media\/users\/blackjero\/profile.jpeg",
    "\/media\/users\/s23b\/profile.png",
    "\/img\/profile.jpg"
  ],
  "id": [
    "Wd3SWN",
    "tstSDH",
    "wdtSDH",
    "WdGGDt",
    "WdKGW3",
    "wdyGDc",
    "wsy3Wc",
    "tdy3Wc",
    "tsG3Wc",
    "wdy3D3",
    "wdKGDV",
    "WsG3RW",
    "wscGWs",
    "tdc3Df",
    "wscGDX",
    "3dd3DS",
    "tstGDN",
    "wsd3WN",
    "wstGW8",
    "3sSSRt",
    "wsSXz1",
    "tsSXz1",
    "wdBGWV",
    "tsBGWK",
    "wdBGWK",
    "tdBGWK",
    "tsSGWK",
    "3dS3DV",
    "WsBGDV",
    "WsB3WV",
    "WdjGWy",
    "Wdj3DG",
    "3s23Wm",
    "3dj3Ww",
    "Ws2GDR",
    "tsB3Wz",
    "wdB3Wz",
    "wdS3Wz",
    "wdB3WR",
    "3sB3Wz",
    "3dS3Wz",
    "3ss3W2",
    "3sXGWN",
    "XtdBD4",
    "4lyyWt",
    "ltycDD",
    "MlGcDD",
    "ls3BzH",
    "4dVcWR",
    "4d3yD8",
    "Xtjfzz",
    "4l2Bzz",
    "4lsBzB",
    "4lXfzr",
    "XtffRr",
    "MlByDd",
    "XlByDt",
    "4tSyDt",
    "llSyzK",
    "XtjyDW",
    "XllyRS",
    "XlsyRr",
    "XsBfWV",
    "4djczy",
    "MdByR1",
    "ldScRh",
    "4sBcRz",
    "XsXcW4",
    "4lyXzy",
    "XtyXDD",
    "XlVXzW",
    "XtVXzW",
    "MltSRj",
    "4tdXR2",
    "Xt3XDH",
    "MlG3Ww",
    "4lyGDw",
    "4dKXWK",
    "ldGSDV",
    "ldGSD1",
    "XsdSWj",
    "lstSDS",
    "4sdXRs",
    "4d3Xz2",
    "Xs3XRj",
    "4scXz4",
    "XdcXz4",
    "4d3Sz4",
    "XdcSR4",
    "lsdXzH",
    "ldtXz8",
    "XddSzH",
    "XstXRH",
    "XsdSRH",
    "4ddSRH",
    "XsdXz8",
    "XdtXz8",
    "4sdSz8",
    "4stSR8",
    "lscXzH",
    "ld3XzH",
    "Ms3Xz8",
    "lscSR8",
    "XdcSz8",
    "Xs3Sz8",
    "XscSR8",
    "4dcSR8",
    "lstXzr",
    "MsdSzr",
    "MdtSzr",
    "MsdXRr",
    "lsdXRr",
    "lddSRr",
    "MdtXzn",
    "MstSzn",
    "lsdXRn",
    "lddXRn",
    "lsdSRn",
    "MddSRn",
    "lddSRn",
    "MdtSRn",
    "ldtSRn",
    "4sdXzr",
    "4stXzr",
    "XstXzr",
    "4dtXzr",
    "XdtXzr",
    "4sdSzr",
    "XsdSzr",
    "XdtSzr",
    "4ddXRr",
    "XddXRr",
    "4stXRr",
    "XstXRr"
  ],
  "hidden": [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ]
}
