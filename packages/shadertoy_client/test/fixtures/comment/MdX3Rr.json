{
  "text": [
    "realistic  terrain ",
    "\nIn [url=https:\/\/www.shadertoy.com\/view\/fdlyW4]this shader[\/url] I calculate the analytical normal of the terrain, which seems to give a small performance increase. Please disregard my (uninformed) comment below, I cannot seem to delete\/remove it.",
    "Hey, I read [url=https:\/\/www.iquilezles.org\/www\/articles\/morenoise\/morenoise.htm]your article[\/url] on using the noise derivatives to modify the FBM construction, like is done to generate the Elevated terrain. I was wondering whether in that case the analytical derivatives of the resulting FBM terrain can still be computed? I tried multiplying the \"default\" FBM derivative (such as the one in the [url=https:\/\/www.shadertoy.com\/view\/4ttSWf]Rainforest[\/url] by the [code]1.0+dot(d,d)[\/code] term every iteration, but that seemed to give incorrect results..",
    "I made [url=https:\/\/www.shadertoy.com\/view\/WsVBRt]a few changes[\/url] to this shader to improve the rendering speed.",
    "I look at your projects primarily as interesting creative examples designed for better hardware. And although the question is obvious to me, but I want to hear first of all your opinion that such works can not be an example of how to make everyday applications.",
    "I've improved the motion blur, it had a quantization issue that was creating some artifacts before. They are gone now.",
    "The motion blur is awesome!",
    "How come I didn't like this shader! Done!",
    "Nice servers by the way...",
    "Smooths out the camera by averaging the camera position over 1 second in each direction.",
    "Smooths out the camera by averaging the camera position over 1 second in each direction.",
    "Line 260: [code]\nro.y = 0.;\n    for (float i = -.3; i <= .3; i += .1)\n    {\n\t    ro.y += terrainL( camPath(time + i).xz);\n    }\n    ro.y \/= 5.;\n    ro.y += 19.0*SC;\n[\/code]",
    "360 at [video]https:\/\/www.youtube.com\/watch?v=tIaiRM0YLuA[\/video]",
    "This shader is awesome, but i think the extra texture read line 20 is pretty much useless, since the color is already stored in \"data.rgb\".:)",
    "@iq what did you use to do the 3d render video you posted?  brilliant work as always, learning so much from you.  ",
    "[This comment has been hidden by the shader author]",
    "I've seen the part of noise derivative in the blog but I was wondering if someone know from where the calculation of a += b*n.x\/(1.0+dot(d,d)); (line 91). My understanding is that we use cubic noise interpolation (together with derivatives) and before calculating final noise value we differentiate once more to go from cubic to quintic. Btw what is the\"m2\" matrice? A domain wrapping shift to change the sampled noise position?",
    "I rendered a 360 version of this shader, if you are curious to see in your mobile or GearVR headset or something:\r\n\r\n[video]https:\/\/www.youtube.com\/watch?v=r_6aTdscdZw[\/video]",
    "iq, I find there is flashing in the adjacent frames, especially the areas far away the camera, if there is any method avoid the flashing.",
    "iq, your work is very inspiring - thank you for sharing it with us!\n",
    "fantacy, you are genius",
    "Yeah, it's black for me too. It used to work.",
    "I'm not seeing anything (everything is black) :( I've tried changing some stuff, and it seems that has something to do with the interesct function (if i comment the else i see the mountains but not the sky)\nI'm on chrome at windows 7 with a NVidia GeForce GTX 760",
    "Ohh.. it's fantastic to fly over that snowy mountain landscape...\nEver thought to add a keyboard handling to steer the camera by hand?",
    "Incredibly unique! If only there were more comments on the code. :(",
    "Well, I always wanted to wander in original Elevated - now, I can:\n\n\t\/\/vec3 ro = camPath( time );\n\t\/\/vec3 ta = camPath( time + 3.0 );\n\tvec3 ro = vec3( iMouse.x, 0.0, iMouse.y );\n\tvec3 ta = vec3( iMouse.x, 0.0, iMouse.y + 1000.0 );\n\n:D\n\nThanks!",
    "wow, how one should do to be this good?",
    "This is totally awesome! I wouldn't mind using a picture from this shader as my facebook cover picture.",
    "Mindoblowing!",
    "First of all, this is amazing!\n\nAnd being that I can't find anyone asking about this I feel like the odd man out.\nWhere do the numbers in the hash and noise functions come from?? To be specific the 43758.5453123, 57, 113 etc...\n\nI mean they are not even prime numbers.\n\nIf there is a place where this is talked about please point me to it.\nIf these are numbers that where found through experimenting just say so, I could except that as an answer. It would be easy to believe that someone who could make this incredible shader would have a good gut instinct on what magic numbers to use.\n\n",
    "Thanks for putting together this site!  A wonderful playground for the mind.",
    "wow++;",
    "wow!!",
    "Amazing, as usual. ;)",
    "Awesome! Good to see the code,thx :)!",
    "Incredibly beautiful! Just awesome!"
  ],
  "date": [
    "1650354411",
    "1642099998",
    "1640783104",
    "1607724088",
    "1601634122",
    "1601321343",
    "1551293213",
    "1551293191",
    "1548008232",
    "1548008207",
    "1548008185",
    "1548008121",
    "1508250509",
    "1506209514",
    "1500028966",
    "1494047989",
    "1490642789",
    "1490397248",
    "1461669603",
    "1446072919",
    "1427776927",
    "1422269013",
    "1418417943",
    "1411648091",
    "1380945003",
    "1378227838",
    "1372763612",
    "1372156110",
    "1369240457",
    "1363274162",
    "1361896009",
    "1361837780",
    "1361785568",
    "1360980751",
    "1360969732",
    "1360888618"
  ],
  "username": [
    "Kaung_Sett",
    "nol",
    "nol",
    "jarble",
    "foxes",
    "iq",
    "felipunkerito",
    "felipunkerito",
    "scratch13764",
    "scratch13764",
    "scratch13764",
    "scratch13764",
    "zproxy",
    "stduhpf",
    "MacroMachines",
    "ollj",
    "red1939",
    "iq",
    "webber",
    "jt",
    "liyonghelpme",
    "TekF",
    "bolt304",
    "tholzer",
    "diegoperini",
    "Yosh",
    "bebensiganteng",
    "jobromedia",
    "myk45",
    "ahrimen",
    "Mipmap",
    "poljere",
    "eloinischith",
    "jmk",
    "XT95",
    "PauloFalcao"
  ],
  "userpicture": [
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/foxes\/profile.jpeg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/scratch13764\/profile.png",
    "\/media\/users\/zproxy\/profile.png",
    "\/media\/users\/stduhpf\/profile.jpeg",
    "\/media\/users\/MacroMachines\/profile.jpeg",
    "\/media\/users\/ollj\/profile.jpeg",
    "\/img\/profile.jpg",
    "\/media\/users\/iq\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/TekF\/profile.png",
    "\/img\/profile.jpg",
    "\/media\/users\/tholzer\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/jobromedia\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/Mipmap\/profile.png",
    "\/media\/users\/poljere\/profile.png",
    "\/img\/profile.jpg",
    "\/img\/profile.jpg",
    "\/media\/users\/XT95\/profile.png",
    "\/media\/users\/PauloFalcao\/profile.jpeg"
  ],
  "id": [
    "tdt3DS",
    "wtjXWR",
    "ttfSWs",
    "WsfGW7",
    "MtyyWt",
    "MtKcDV",
    "ltXyD7",
    "MlfcW7",
    "XsSfDc",
    "4dSfDc",
    "XdSfDc",
    "4sBBDc",
    "XlcSWr",
    "MlG3WV",
    "4ldGDM",
    "4sKXzc",
    "ldGXzw",
    "ldVXRD",
    "4lSSzW",
    "ltf3W7",
    "4ssSWX",
    "MdsSWM",
    "4dsXDn",
    "Md23Dd",
    "4ss3DB",
    "lsf3Rf",
    "lslGW4",
    "MsXGWN",
    "lssGDr",
    "MsX3z8",
    "ldX3zn",
    "ldf3Rn",
    "MsXGRn",
    "XdfGRr",
    "4sf3zn",
    "4sX3zn"
  ],
  "hidden": [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ]
}
