name: CI

on:
  schedule:
    - cron: '*/30 8 * * *'
  push:
    branches:
      - develop
    paths:
      - 'melos.yaml'
      - 'crates/**'
      - 'packages/**'
      - '.github/workflows/ci.yml'

  pull_request:
    branches:
      - develop
    paths:
      - 'melos.yaml'
      - 'crates/**'
      - 'packages/**'
      - '.github/workflows/ci.yml'

jobs:
  rust:
    name: Rust

    strategy:
      matrix:
        host: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        library: ['shadertoy_wgpu_ffi']
        package: ['shadertoy_wgpu']
        include:
          - host: ubuntu-latest
            toolchain: stable
            target: x86_64-unknown-linux-gnu
            prefix: lib
            os: linux
            bitness: 64
            extension: so
          - host: macos-latest
            toolchain: stable
            target: x86_64-apple-darwin            
            prefix: lib
            os: mac
            bitness: 64
            extension: dylib
          - host: windows-latest
            toolchain: stable
            target: x86_64-pc-windows-msvc            
            prefix:
            os: win
            bitness: 64
            extension: dll

    runs-on: ${{ matrix.host }}

    steps:
      - name: Set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Building workspace
        uses: marcopolo/cargo@master
        with:
          use-cross: true
          command: build
          working-directory: crates
          args: --release --target ${{ matrix.target }}

      - name: Prepare shared libraries
        run: | 
          mkdir -p crates/target/dist
          cp crates/target/${{ matrix.target }}/release/${{ matrix.prefix }}${{ matrix.library }}.${{ matrix.extension }} crates/target/dist/${{ matrix.library }}-${{ matrix.os }}${{ matrix.bitness }}.${{ matrix.extension }}
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.library }}-${{ matrix.os }}${{ matrix.bitness }}.${{ matrix.extension }}
          path: crates/target/dist/${{ matrix.library }}-${{ matrix.os }}${{ matrix.bitness }}.${{ matrix.extension }}
  dart:
    name: Dart
    needs: rust
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        sdk: ['stable']

    steps:
      - name: Setup os
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libsqlite3-dev -y

      - name: Set up dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install tools
        run: |
          pub global activate melos

      - name: Bootstrap
        run: |
          melos bootstrap
          
      - name: Build
        run: |
          melos run build
          
      - name: Linter
        run: |
          melos run dependency-validator
          melos run format
          melos run analyze

      - name: Test
        run: |
          melos run test

      - name: Documentation
        run: |
          melos run doc

      - name: Publish dry run
        run: |
          melos publish

      #- name: Commit changes
      #  uses: EndBug/add-and-commit@v7
      #  with:
      #    default_author: github_actions